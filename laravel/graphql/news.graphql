extend type Query {
    #    news(id: ID @eq,slug: String @eq): [News] @paginate(defaultCount: 10)
    news(tag: String, slug: String, first: Int, page: Int): CustomNewsPaginator @field(resolver: "App\\GraphQL\\Queries\\NewsQuery@news")
    hotNews(first: Int, page: Int): CustomNewsPaginator @field(resolver: "App\\GraphQL\\Queries\\NewsQuery@hotNews")
    lastNews(first: Int, page: Int): CustomNewsPaginator @field(resolver: "App\\GraphQL\\Queries\\NewsQuery@lastNews")
    slider: [Slider] @field(resolver: "App\\GraphQL\\Queries\\NewsQuery@slider")
    chiefChoice: [ChiefChoice] @field(resolver: "App\\GraphQL\\Queries\\NewsQuery@chiefChoice")
}

type Slider {
    news_id         : ID
    main_title      : String
    secondary_title : String
    slug            : String
    first_tag       : String
    second_tag      : String
    third_tag       : String
    forth_tag       : String
    images          : [Image] @field(resolver: "App\\GraphQL\\Queries\\NewsQuery@image")
}

type ChiefChoice {
    news_id         : ID
    main_title      : String
    secondary_title : String
    slug            : String
    images          : [Image] @field(resolver: "App\\GraphQL\\Queries\\NewsQuery@image")
}

type News {
    id: ID
    main_title: String
    secondary_title: String
    view: Int
    created_at: Date
    slug: String
    images: [Image]
    comments: [Comment]
}

type CustomNewsPaginator{
    data: [News]
    paginatorInfo: PaginatorInfo
}
